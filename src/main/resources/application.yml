spring:
  config:
    activate:
      on-profile: dev
  datasource:
    url: jdbc:h2:mem:cryptoDB
  h2:
    console:
      enabled: true
  jpa:
    hibernate:
      ddl-auto: none
  flyway:
    check-location: false
    locations: classpath:db/migration
crypto:
  initial:
    data: /initial_data
server:
  port: 8080
---
spring:
  config:
    activate:
      on-profile: prod
  datasource:
    #    url: jdbc:postgresql://<container_name>:5432/crypto
    url: jdbc:postgresql://localhost:5432/crypto
    password: postgres
    username: postgres
    initialize: true
    initialization-mode: always
    continue-on-error: true
    jpa:
      hibernate:
        ddl-auto: none
  flyway:
    check-location: false
    locations: filesystem:/migration
crypto:
  initial:
    data: /initial_data
server:
  port: 9000

---
spring:
  config:
    activate:
      on-profile: test
  cache:
    type: none

---
logging:
  level:
    org.springframework.jdbc.datasource.init.ScriptUtils: debug

server:
  port: 8080

spring:

  mvc:
    format:
      date: yyyy-MM-dd
  cache:
    cache-names:
      - rate-limit-buckets
    caffeine:
      spec: maximumSize=2,expireAfterAccess=3600s

bucket4j:
  enabled: true
  filters:
    - cache-name: rate-limit-buckets
      url: .*
      http-response-body: "{ \"status\": 429, \"error\": \"Too Many Requests. Rate-limit set to 20 per 1 minute\", \"message\": \"You have exhausted your API Request Quota\" }"
      rate-limits:
        - expression: "getRemoteAddr()"
          bandwidths:
            - capacity: 20
              time: 1
              unit: minutes


springdoc:
    api-docs:
      path: /api/v1/crypto/api-docs




